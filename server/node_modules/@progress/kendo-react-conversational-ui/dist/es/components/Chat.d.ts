import * as PropTypes from 'prop-types';
import * as React from 'react';
import { ChatState } from './../ChatPropsAndState';
import { ChatProps } from './../main';
/**
 * Represents the [KendoReact Chat component]({% slug overview_convui %}).
 */
export declare class Chat extends React.Component<ChatProps, ChatState> {
    /**
     * @hidden
     */
    static propTypes: {
        messages: PropTypes.Requireable<any>;
        user: PropTypes.Requireable<any>;
        messageTemplate: PropTypes.Requireable<any>;
        attachmentTemplate: PropTypes.Requireable<any>;
        width: PropTypes.Requireable<any>;
        onMessageSend: PropTypes.Requireable<any>;
        onActionExecute: PropTypes.Requireable<any>;
        dir: PropTypes.Requireable<any>;
    };
    /**
     * @hidden
     */
    static defaultProps: {
        messages: any[];
    };
    /**
     * @hidden
     */
    readonly state: ChatState;
    private chatWrapperEl;
    private viewItemsWrapperEl;
    private newMsgComp;
    private timeoutIdForChatLosingFocus;
    private nextTickId;
    constructor(props: ChatProps);
    /**
     * @hidden
     */
    render(): JSX.Element;
    /**
     * @hidden
     */
    componentWillReceiveProps(nextProps: any): void;
    /**
     * @hidden
     */
    componentDidMount(): void;
    /**
     * @hidden
     */
    componentWillUnmount(): void;
    /**
     * @hidden
     */
    componentDidUpdate(prevProps: ChatProps): void;
    private getClassNames;
    private checkIsDirectionRightToLeft;
    private onFocus;
    private onBlur;
    private onSelectionRequested;
    private onKeyDown;
    private selectLastViewItemWhenNoCurrentSelection;
    private renderViewItems;
    private onMessageSend;
    private onActionExecute;
    private scrollViewItemsToBottom;
    private getViewItemsFromMsgs;
}
