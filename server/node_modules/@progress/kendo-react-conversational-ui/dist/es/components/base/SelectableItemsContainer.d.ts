import * as React from 'react';
import { ActionGroup, AttachmentGroup } from './../../ViewItem';
/**
 * @hidden
 */
export interface SelectableItemsContainerProps {
    selected: boolean;
    isLastGroup: boolean;
    group: ActionGroup | AttachmentGroup;
    onRequestSelection: any;
}
/**
 * @hidden
 */
export interface SelectableItemsContainerState {
    selectedItemIndex: number | null;
    isKeyboardNavigationLeftRight: boolean;
}
/**
 * @hidden
 */
export declare abstract class SelectableItemsContainer<P extends SelectableItemsContainerProps, S extends SelectableItemsContainerState> extends React.Component<P, S> {
    readonly state: any;
    componentWillReceiveProps(nextProps: any): void;
    protected onRequestContainerSelection: () => any;
    protected onKeyDown: (event: React.KeyboardEvent<HTMLElement>) => void;
    protected navigate(incrementSelection: boolean, newSelectedItemIndexUponFirstIncrement?: number): number | null;
    private getLastSelectionIndex;
}
